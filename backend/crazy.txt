CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    token VARCHAR(255),
    role VARCHAR(20),
    status VARCHAR(50),
    device VARCHAR(10),
    session_expires_at TIMESTAMP,
    two_factor_enabled BOOLEAN DEFAULT FALSE,
    two_factor_secret VARCHAR(255),
    session_token VARCHAR(255),
    adress VARCHAR(255),
    compAdress VARCHAR(255),
    postCode VARCHAR(20),
    city VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    profilePic VARCHAR(255),
    description TEXT,
    siret VARCHAR(50),
    tags TEXT[],
    rate NUMERIC(3, 2)
);

-- Indexes for users table
CREATE INDEX idx_users_email ON users (email); -- Already unique, but explicitly adding for clarity
CREATE INDEX idx_users_session_token ON users (session_token); -- For session-based lookups
CREATE INDEX idx_users_role ON users (role); -- For filtering by role (e.g., admin, member)
CREATE INDEX idx_users_status ON users (status); -- For filtering by status
CREATE INDEX idx_users_tags ON users USING GIN (tags); -- For array-based searches on tags
CREATE INDEX idx_users_rate ON users (rate); -- For sorting or filtering by rate
CREATE INDEX idx_users_createdAt ON users (createdAt); -- For sorting or filtering by creation date

CREATE TABLE rooms (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    start DATE,
    end DATE,
    status VARCHAR(50),
    quantity INTEGER,
    photos TEXT[],
    price NUMERIC(10, 2)
);

-- Indexes for rooms table
CREATE INDEX idx_rooms_user_id ON rooms (user_id); -- For lookups by user_id (foreign key)
CREATE INDEX idx_rooms_status ON rooms (status); -- For filtering by status
CREATE INDEX idx_rooms_start_end ON rooms (start, end); -- For range queries on dates
CREATE INDEX idx_rooms_price ON rooms (price); -- For sorting or filtering by price
CREATE INDEX idx_rooms_photos ON rooms USING GIN (photos); -- For array-based searches on photos

CREATE TABLE reservation (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    rooms_id INTEGER REFERENCES rooms(id),
    bargainedPrice NUMERIC(10, 2),
    status VARCHAR(50),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    decisionAt TIMESTAMP
);

-- Indexes for reservation table
CREATE INDEX idx_reservation_user_id ON reservation (user_id); -- For lookups by user_id (foreign key)
CREATE INDEX idx_reservation_rooms_id ON reservation (rooms_id); -- For lookups by rooms_id (foreign key)
CREATE INDEX idx_reservation_status ON reservation (status); -- For filtering by status
CREATE INDEX idx_reservation_createdAt ON reservation (createdAt); -- For sorting or filtering by creation date
CREATE INDEX idx_reservation_decisionAt ON reservation (decisionAt); -- For sorting or filtering by decision date
CREATE INDEX idx_reservation_bargainedPrice ON reservation (bargainedPrice); -- For sorting or filtering by price

CREATE TABLE swipes (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    rooms_id INTEGER REFERENCES rooms(id),
    action VARCHAR(50),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Indexes for swipes table
CREATE INDEX idx_swipes_user_id ON swipes (user_id); -- For lookups by user_id (foreign key)
CREATE INDEX idx_swipes_rooms_id ON swipes (rooms_id); -- For lookups by rooms_id (foreign key)
CREATE INDEX idx_swipes_action ON swipes (action); -- For filtering by action
CREATE INDEX idx_swipes_createdAt ON swipes (createdAt); -- For sorting or filtering by creation date
CREATE INDEX idx_swipes_user_room ON swipes (user_id, rooms_id); -- For queries involving both user_id and rooms_id


CREATE TABLE messages (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    reservation_id INTEGER REFERENCES reservation(id),
    sender_id INTEGER REFERENCES users(id),
    content TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Indexes for messages table
CREATE INDEX idx_messages_user_id ON messages (user_id); -- For lookups by user_id (foreign key)
CREATE INDEX idx_messages_reservation_id ON messages (reservation_id); -- For lookups by reservation_id (foreign key)
CREATE INDEX idx_messages_sender_id ON messages (sender_id); -- For lookups by sender_id (foreign key)
CREATE INDEX idx_messages_createdAt ON messages (createdAt); -- For sorting or filtering by creation date
CREATE INDEX idx_messages_user_reservation ON messages (user_id, reservation_id); -- For queries involving both user_id and reservation_id
